---
import { getCollection } from 'astro:content';
import Layout from '../layouts/Layout.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';

// Portfolio projects from content collection
const portfolioProjects = (await getCollection('portfolio')).sort((a, b) => a.data.order - b.data.order);

const allProjects = portfolioProjects.map(project => ({
  title: project.data.title,
  company: project.data.company,
  category: project.data.category.toUpperCase(),
  services: project.data.services,
  image: project.data.heroImage,
  slug: project.slug
}));

const categories = ['ALL', ...new Set(allProjects.map(project => project.category))];
---

<Layout 
  title="Work | Lumina7 - Design & Development Portfolio"
  description="Explore Lumina7's portfolio of brand design, UI/UX, and web development projects. See how we've helped businesses stand out."
>
  <Header />
  
  <!-- Hero Section -->
  <section class="pt-24 pb-20 px-6 lg:px-8 bg-white">
    <div class="max-w-7xl mx-auto">
      <div class="max-w-3xl">
        <h1 class="text-4xl md:text-6xl font-medium text-gray-900 mb-8 leading-tight mt-8">
          For years we have been designing not just brands, but experiences worth remembering.
        </h1>
      </div>
    </div>
  </section>

  <!-- Filter Section -->
  <section class="py-8 px-6 lg:px-8 bg-white border-b border-gray-200">
    <div class="max-w-7xl mx-auto">
      <div class="flex flex-wrap gap-4 justify-start">
        {categories.map(category => (
          <button 
            class="filter-btn px-6 py-3 text-sm font-medium text-gray-600 hover:text-black transition-colors uppercase tracking-wide"
            data-filter={category.toLowerCase()}
          >
            {category}
          </button>
        ))}
      </div>
    </div>
  </section>

  <!-- Projects Grid -->
  <section class="py-20 px-6 lg:px-8 bg-white">
    <div class="max-w-7xl mx-auto">
      <div id="projects-grid" class="grid md:grid-cols-2 lg:grid-cols-3 gap-8">
        {allProjects.map(project => (
          <div class="project-item group cursor-pointer" data-category={project.category.toLowerCase()}>
            <a href={`/work/${project.slug}`} class="block">
              <div class="mb-6">
                <div class="aspect-[4/3] bg-gray-100 overflow-hidden mb-6">
                  <img 
                    src={project.image} 
                    alt={project.title}
                    class="w-full h-full object-cover group-hover:scale-105 transition-transform duration-500"
                  />
                </div>
                
                <h3 class="text-xl font-medium text-gray-900 mb-2 group-hover:text-gray-600 transition-colors leading-tight">
                  {project.company || project.title}
                </h3>
                
                <p class="text-sm text-gray-600 mb-4">
                  {project.title}
                </p>
                
                <div class="services-container relative overflow-hidden">
                  <div class="services-list flex gap-2 text-sm text-gray-600 group-hover:animate-scroll transition-transform duration-300">
                    {project.services.map((service, index) => (
                      <span class="whitespace-nowrap">
                        {service}{index < project.services.length - 1 ? ',' : ''}
                      </span>
                    ))}
                  </div>
                  <div class="absolute top-0 right-0 w-16 h-full bg-gradient-to-l from-white via-white/80 to-transparent pointer-events-none group-hover:opacity-0 transition-opacity duration-300"></div>
                </div>
              </div>
            </a>
          </div>
        ))}
      </div>
    </div>
  </section>

  <Footer />
</Layout>

<style>
  @keyframes scroll {
    0% { transform: translateX(0); }
    100% { transform: translateX(-40px); }
  }
  
  .group:hover .animate-scroll {
    animation: scroll 3s ease-in-out infinite alternate;
  }
</style>

<script>
  // Portfolio filtering functionality
  document.addEventListener('DOMContentLoaded', function() {
    const filterButtons = document.querySelectorAll('.filter-btn');
    const projectItems = document.querySelectorAll('.project-item');
    
    // Set initial active state
    filterButtons[0].classList.add('text-black', 'font-semibold');
    
    filterButtons.forEach(button => {
      button.addEventListener('click', function() {
        const filter = this.getAttribute('data-filter');
        
        // Update active button
        filterButtons.forEach(btn => {
          btn.classList.remove('text-black', 'font-semibold');
          btn.classList.add('text-gray-600');
        });
        this.classList.add('text-black', 'font-semibold');
        this.classList.remove('text-gray-600');
        
        // Filter projects
        projectItems.forEach(item => {
          const category = item.getAttribute('data-category');
          
          if (filter === 'all' || category === filter) {
            item.style.display = 'block';
          } else {
            item.style.display = 'none';
          }
        });
      });
    });
  });
</script>