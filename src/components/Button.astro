---
export interface Props {
  variant?: 'primary' | 'secondary' | 'outline' | 'ghost';
  size?: 'sm' | 'md' | 'lg';
  href?: string;
  type?: 'button' | 'submit' | 'reset';
  disabled?: boolean;
  class?: string;
  target?: string;
  rel?: string;
}

const { 
  variant = 'primary', 
  size = 'md', 
  href, 
  type = 'button', 
  disabled = false, 
  class: className = '',
  target,
  rel,
  ...rest 
} = Astro.props;

const baseClasses = 'inline-flex items-center justify-center font-medium transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 disabled:opacity-50 disabled:cursor-not-allowed';

const variants = {
  primary: 'bg-gray-900 text-white hover:bg-gray-800 focus:ring-gray-500',
  secondary: 'bg-gray-100 text-gray-900 hover:bg-gray-200 focus:ring-gray-500',
  outline: 'border border-gray-300 text-gray-700 hover:bg-gray-50 focus:ring-gray-500',
  ghost: 'text-gray-700 hover:bg-gray-100 focus:ring-gray-500'
};

const sizes = {
  sm: 'px-3 py-2 text-sm rounded',
  md: 'px-6 py-3 text-sm rounded',
  lg: 'px-8 py-4 text-base rounded-lg'
};

const classes = `${baseClasses} ${variants[variant]} ${sizes[size]} ${className}`;

const Element = href ? 'a' : 'button';
---

<Element 
  class={classes}
  href={href}
  type={!href ? type : undefined}
  disabled={!href ? disabled : undefined}
  target={target}
  rel={rel}
  {...rest}
>
  <slot />
</Element>
