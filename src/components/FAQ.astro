---
export interface Props {
  faqItems: Array<{
    number: string;
    question: string;
    answer: string;
  }>;
}

const { faqItems } = Astro.props;
---

<!-- FAQ Section -->
<section class="py-32 px-6 lg:px-8 bg-white">
  <div class="max-w-7xl mx-auto">
    <div class="grid lg:grid-cols-12 gap-16">
      <!-- Left side - FAQ Title -->
      <div class="lg:col-span-4">
        <h2 class="text-4xl md:text-5xl font-medium text-black leading-tight">
          FAQ:<br />
          <span class="text-gray-400">frequently asked questions</span>
        </h2>
      </div>
      
      <!-- Right side - FAQ Items -->
      <div class="lg:col-span-8">
        <div class="space-y-0">
          {faqItems.map((item, index) => (
            <div class="faq-item border-b border-gray-200 last:border-b-0" data-faq={index}>
              <button class="faq-trigger w-full text-left py-8 hover:bg-gray-50 transition-colors duration-300 group">
                <div class="flex items-start justify-between gap-8">
                  <div class="flex items-start gap-6">
                    <span class="text-sm font-medium text-gray-400 mt-1 min-w-[2rem]">{item.number}</span>
                    <h3 class="text-xl md:text-2xl font-medium text-black group-hover:text-gray-600 transition-colors leading-tight">
                      {item.question}
                    </h3>
                  </div>
                  <span class="faq-icon text-2xl text-gray-400 group-hover:text-gray-600 transition-colors min-w-[3rem] text-center">+</span>
                </div>
              </button>
              
              <div class="faq-content hidden pb-8">
                <div class="ml-14">
                  <p class="text-gray-600 leading-relaxed">
                    {item.answer}
                  </p>
                </div>
              </div>
            </div>
          ))}
        </div>
      </div>
    </div>
  </div>
</section>

<script>
  // FAQ Accordion functionality
  document.addEventListener('DOMContentLoaded', function() {
    const faqTriggers = document.querySelectorAll('.faq-trigger');
    
    faqTriggers.forEach(trigger => {
      trigger.addEventListener('click', function() {
        const faqItem = this.closest('.faq-item');
        const content = faqItem.querySelector('.faq-content');
        const icon = faqItem.querySelector('.faq-icon');
        
        // Close all other FAQ items
        faqTriggers.forEach(otherTrigger => {
          if (otherTrigger !== trigger) {
            const otherItem = otherTrigger.closest('.faq-item');
            const otherContent = otherItem.querySelector('.faq-content');
            const otherIcon = otherItem.querySelector('.faq-icon');
            
            otherContent.classList.add('hidden');
            otherIcon.textContent = '+';
          }
        });
        
        // Toggle current FAQ item
        if (content.classList.contains('hidden')) {
          content.classList.remove('hidden');
          icon.textContent = 'âˆ’';
        } else {
          content.classList.add('hidden');
          icon.textContent = '+';
        }
      });
    });
  });
</script>
